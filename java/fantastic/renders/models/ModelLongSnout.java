// Date: 3/27/2014 9:32:25 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
 
 
 
 
 
 
package fantastic.renders.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import fantastic.entities.EntityBasicFish;
import fantastic.entities.EntityCatfish;
import fantastic.entities.EntityFantasticFish;
 
public class ModelLongSnout extends ModelBase
{
  //fields
    ModelRenderer nose;
    ModelRenderer snout_top;
    ModelRenderer headtop;
    ModelRenderer headfin;
    ModelRenderer hornL;
    ModelRenderer hornR;
    ModelRenderer Lwisker;
    ModelRenderer Rwisker;
    ModelRenderer normal_jaw;
    ModelRenderer long_bottom_jaw;
    ModelRenderer bodysegment1;
    ModelRenderer frontfinL;
    ModelRenderer frontfinR;
    ModelRenderer bodysegment2;
    ModelRenderer altsidefinR;
    ModelRenderer bottemfin;
    ModelRenderer topfin;
    ModelRenderer sidefinL;
    ModelRenderer altsidefinL;
    ModelRenderer sidefinR;
    ModelRenderer bodysegment3;
    ModelRenderer bodysegment4;
    ModelRenderer backfinL;
    ModelRenderer backfinR;
    ModelRenderer bodysegment5;
    ModelRenderer bodysegment6;
    ModelRenderer tail;
   
  public ModelLongSnout()
  {
    textureWidth = 128;
    textureHeight = 128;
     
      nose = new ModelRenderer(this, 0, 73);
      nose.addBox(-1.2F, -1.2F, -14F, 1, 1, 18);
      nose.setRotationPoint(0F, 1F, -20F);
      nose.setTextureSize(128, 128);
      nose.mirror = true;
      setRotation(nose, 0F, 0F, 0.7853982F);
      snout_top = new ModelRenderer(this, 0, 15);
      snout_top.addBox(-2.5F, -1F, -14F, 5, 2, 16);
      snout_top.setRotationPoint(0F, 1F, -19F);
      snout_top.setTextureSize(128, 128);
      snout_top.mirror = true;
      setRotation(snout_top, 0F, 0F, 0F);
      headtop = new ModelRenderer(this, 0, 0);
      headtop.addBox(-3F, 0F, 0F, 6, 8, 7);
      headtop.setRotationPoint(0F, 1F, -18F);
      headtop.setTextureSize(128, 128);
      headtop.mirror = true;
      setRotation(headtop, 0.7853982F, 0F, 0F);
      headfin = new ModelRenderer(this, 85, 34);
      headfin.addBox(0F, -5F, -4F, 0, 11, 19);
      headfin.setRotationPoint(0F, 1F, -18F);
      headfin.setTextureSize(128, 128);
      headfin.mirror = true;
      setRotation(headfin, 0.7853982F, 0F, 0F);
      hornL = new ModelRenderer(this, 26, 17);
      hornL.addBox(0F, 1F, 5F, 1, 1, 10);
      hornL.setRotationPoint(0F, 1F, -18F);
      hornL.setTextureSize(128, 128);
      hornL.mirror = true;
      setRotation(hornL, 0.9250245F, 0.2617994F, 0.2617994F);
      hornR = new ModelRenderer(this, 26, 17);
      hornR.addBox(-1F, 1F, 5F, 1, 1, 10);
      hornR.setRotationPoint(0F, 1F, -18F);
      hornR.setTextureSize(128, 128);
      hornR.mirror = true;
      setRotation(hornR, 0.9250245F, -0.2617994F, -0.2617994F);
      Lwisker = new ModelRenderer(this, 28, 24);
      Lwisker.addBox(2F, 0F, 0F, 0, 13, 13);
      Lwisker.setRotationPoint(0F, 1F, -18F);
      Lwisker.setTextureSize(128, 128);
      Lwisker.mirror = true;
      setRotation(Lwisker, 0F, 0.2617994F, -0.6108652F);
      Rwisker = new ModelRenderer(this, 28, 24);
      Rwisker.addBox(-2F, 0F, 0F, 0, 13, 13);
      Rwisker.setRotationPoint(0F, 1F, -18F);
      Rwisker.setTextureSize(128, 128);
      Rwisker.mirror = true;
      setRotation(Rwisker, 0F, -0.2617994F, 0.6108652F);
      normal_jaw = new ModelRenderer(this, 0, 15);
      normal_jaw.addBox(-2.5F, -5F, -2F, 5, 6, 2);
      normal_jaw.setRotationPoint(0F, 5F, -13F);
      normal_jaw.setTextureSize(128, 128);
      normal_jaw.mirror = true;
      setRotation(normal_jaw, 0.8726646F, 0F, 0F);
      long_bottom_jaw = new ModelRenderer(this, 0, 33);
      long_bottom_jaw.addBox(-2.5F, -1F, -21F, 5, 2, 18);
      long_bottom_jaw.setRotationPoint(0F, 3F, -12F);
      long_bottom_jaw.setTextureSize(128, 128);
      long_bottom_jaw.mirror = true;
      setRotation(long_bottom_jaw, 0F, 0F, 0F);
      frontfinL = new ModelRenderer(this, 102, 26);
      frontfinL.addBox(2F, 5F, -3F, 0, 14, 13);
      frontfinL.setRotationPoint(0F, 1F, 4F);
      frontfinL.setTextureSize(128, 128);
      frontfinL.mirror = true;
      setRotation(frontfinL, 0.3316126F, 0.1396263F, -0.2617994F);
      frontfinR = new ModelRenderer(this, 102, 26);
      frontfinR.addBox(-2F, 5F, -3F, 0, 14, 13);
      frontfinR.setRotationPoint(0F, 1F, 4F);
      frontfinR.setTextureSize(128, 128);
      frontfinR.mirror = true;
      setRotation(frontfinR, 0.3316126F, -0.1396263F, 0.2617994F);
      altsidefinR = new ModelRenderer(this, 67, 64);
      altsidefinR.addBox(-1F, 0F, -3F, 21, 0, 19);
      altsidefinR.setRotationPoint(-4F, 1F, 3F);
      altsidefinR.setTextureSize(128, 128);
      altsidefinR.mirror = true;
      setRotation(altsidefinR, 0F, 0F, 2.879793F);
      bottemfin = new ModelRenderer(this, 40, 55);
      bottemfin.addBox(0F, -1F, -6F, 0, 17, 20);
      bottemfin.setRotationPoint(0F, 6F, -2F);
      bottemfin.setTextureSize(128, 128);
      bottemfin.mirror = true;
      setRotation(bottemfin, 0.2443461F, 0F, 0F);
      topfin = new ModelRenderer(this, 41, 31);
      topfin.addBox(0F, -23F, -8F, 0, 22, 22);
      topfin.setRotationPoint(0F, -1F, 8F);
      topfin.setTextureSize(128, 128);
      topfin.mirror = true;
      setRotation(topfin, -0.2268928F, 0F, 0F);
      sidefinL = new ModelRenderer(this, 0, 37);
      sidefinL.addBox(0F, -8F, 0F, 0, 17, 19);
      sidefinL.setRotationPoint(4F, 1F, 3F);
      sidefinL.setTextureSize(128, 128);
      sidefinL.mirror = true;
      setRotation(sidefinL, 0F, 0.7853982F, 0F);
      altsidefinL = new ModelRenderer(this, 67, 64);
      altsidefinL.addBox(-1F, 0F, -3F, 21, 0, 19);
      altsidefinL.setRotationPoint(4F, 1F, 3F);
      altsidefinL.setTextureSize(128, 128);
      altsidefinL.mirror = true;
      setRotation(altsidefinL, 0F, 0F, 0.2617994F);
      sidefinR = new ModelRenderer(this, 0, 37);
      sidefinR.addBox(0F, -8F, 0F, 0, 17, 19);
      sidefinR.setRotationPoint(-4F, 1F, 3F);
      sidefinR.setTextureSize(128, 128);
      sidefinR.mirror = true;
      setRotation(sidefinR, 0F, -0.7853982F, 0F);  
      bodysegment1 = new ModelRenderer(this, 26, 0);
      bodysegment1.addBox(-4F, -3.7F, 0F, 8, 10, 7);
      bodysegment1.setRotationPoint(0F, 0F, -13F);
      bodysegment1.setTextureSize(128, 128);
      bodysegment1.mirror = true;
      setRotation(bodysegment1, 0F, 0F, 0F);
      bodysegment2 = new ModelRenderer(this, 56, 0);
      bodysegment2.addBox(-4.466667F, -4.166667F, 0F, 9, 11, 9);
      bodysegment2.setRotationPoint(0F, 0F, 6F);
      bodysegment2.setTextureSize(128, 128);
      bodysegment2.mirror = true;
      setRotation(bodysegment2, 0F, 0F, 0F);
      bodysegment3 = new ModelRenderer(this, 92, 0);
      bodysegment3.addBox(-4F, -2.7F, 0F, 8, 9, 10);
      bodysegment3.setRotationPoint(0F, -1F, 9F);
      bodysegment3.setTextureSize(128, 128);
      bodysegment3.mirror = true;
      setRotation(bodysegment3, 0F, 0F, 0F);
      bodysegment4 = new ModelRenderer(this, 42, 21);
      bodysegment4.addBox(-3.5F, -1.7F, 0F, 7, 7, 8);
      bodysegment4.setRotationPoint(0F, 0F, 10F);
      bodysegment4.setTextureSize(128, 128);
      bodysegment4.mirror = true;
      setRotation(bodysegment4, 0F, 0F, 0F);
      bodysegment5 = new ModelRenderer(this, 72, 21);
      bodysegment5.addBox(-2.5F, -0.7F, 0F, 5, 5, 8);
      bodysegment5.setRotationPoint(0F, 0F, 7F);
      bodysegment5.setTextureSize(128, 128);
      bodysegment5.mirror = true;
      setRotation(bodysegment5, 0F, 0F, 0F);
      bodysegment6 = new ModelRenderer(this, 98, 25);
      bodysegment6.addBox(-1F, 0.3F, 0F, 2, 3, 4);
      bodysegment6.setRotationPoint(0F, 0F, 7F);
      bodysegment6.setTextureSize(128, 128);
      bodysegment6.mirror = true;
      setRotation(bodysegment6, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 0, 66);
      tail.addBox(0F, -0.7F, -2F, 0, 26, 26);
      tail.setRotationPoint(0F, 0F, 3F);
      tail.setTextureSize(128, 128);
      tail.mirror = true;
      setRotation(tail, 0.7853982F, 0F, 0F);
      backfinL = new ModelRenderer(this, 72, 21);
      backfinL.addBox(0F, 3F, 2F, 0, 14, 15);
      backfinL.setRotationPoint(0F, 0F, -1F);
      backfinL.setTextureSize(128, 128);
      backfinL.mirror = true;
      setRotation(backfinL, 0F, 0F, -0.2617994F);
      backfinR = new ModelRenderer(this, 72, 21);
      backfinR.addBox(-1F, 3F, 2F, 0, 14, 15);
      backfinR.setRotationPoint(0F, 0F, -1F);
      backfinR.setTextureSize(128, 128);
      backfinR.mirror = true;
      setRotation(backfinR, 0F, 0F, 0.2617994F);
      
      bodysegment1.addChild(bodysegment2);
      bodysegment2.addChild(bodysegment3);
      bodysegment3.addChild(bodysegment4);
      bodysegment4.addChild(bodysegment5);
      bodysegment5.addChild(bodysegment6);
      bodysegment6.addChild(tail);
      
      bodysegment2.addChild(topfin);
      bodysegment2.addChild(altsidefinL);
      bodysegment2.addChild(altsidefinR);
      bodysegment2.addChild(sidefinL);
      bodysegment2.addChild(sidefinR);
      
      bodysegment3.addChild(bottemfin);
      
      bodysegment1.addChild(frontfinL);
      bodysegment1.addChild(frontfinR);
      
      bodysegment4.addChild(backfinL);
      bodysegment4.addChild(backfinR);
      
      
  }
   
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    nose.render(f5);
    snout_top.render(f5);
    headtop.render(f5);
    headfin.render(f5);
    hornL.render(f5);
    hornR.render(f5);
    Lwisker.render(f5);
    Rwisker.render(f5);
    normal_jaw.render(f5);
    long_bottom_jaw.render(f5);
    //frontfinL.render(f5);
    //frontfinR.render(f5);
    //altsidefinR.render(f5);
    //bottemfin.render(f5);
    //topfin.render(f5);
    //sidefinL.render(f5);
    //altsidefinL.render(f5);
    //sidefinR.render(f5);
    //backfinL.render(f5);
    //backfinR.render(f5);
    bodysegment1.render(f5);
    //bodysegment2.render(f5);
    //bodysegment3.render(f5);
    //bodysegment4.render(f5);
    //bodysegment5.render(f5);
    //bodysegment6.render(f5);
    //tail.render(f5);
  }
   
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
 
  int extraSpeed = 1;
  float sizeChange = 1;
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    EntityFantasticFish _fish = (EntityFantasticFish)entity;


    
    this.bodysegment1.rotateAngleY = 0.24F *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F) );
    this.bodysegment2.rotateAngleY = 0.22F  *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F - (float)(Math.PI/6)) );
    this.bodysegment3.rotateAngleY = 0.22F *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F - (float)(Math.PI/3)) );
    this.bodysegment4.rotateAngleY = 0.22F *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F - (float)(Math.PI/2)) );
    this.bodysegment5.rotateAngleY = 0.24F *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F - (float)(2*Math.PI/3)) );
    this.bodysegment6.rotateAngleY = 0.26F *(MathHelper.cos(f2 * _fish.currentSpeed *  _fish.GetTailFlapSpeed() * 0.127F - (float)(5*Math.PI/6)) );
  }
 
}