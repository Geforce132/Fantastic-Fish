// Date: 7/24/2014 8:14:05 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package fantastic.renders.models.armor;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelDiverChest extends ModelBiped
{
	
	
  //fields
    ModelRenderer shoulders3;
    ModelRenderer body;
    ModelRenderer shoulder21;
    ModelRenderer chest;
    ModelRenderer shoulders2;
    ModelRenderer tank2;
    ModelRenderer tank1;
    ModelRenderer tank3;
    ModelRenderer armR;
    ModelRenderer lowerarmR;
    ModelRenderer upperarmR;
    ModelRenderer sholderR;
    ModelRenderer elbowR;
    ModelRenderer handR;
    ModelRenderer thumbR;
    ModelRenderer finger1R;
    ModelRenderer finger2R;
    ModelRenderer finger3R;
    ModelRenderer finger4R;
    ModelRenderer armL;
    ModelRenderer lowerarmL;
    ModelRenderer upperarmL;
    ModelRenderer sholderL;
    ModelRenderer elbowL;
    ModelRenderer finger4L;
    ModelRenderer handL;
    ModelRenderer finger1L;
    ModelRenderer thumbL;
    ModelRenderer finger2L;
    ModelRenderer finger3L;
  
  public ModelDiverChest(float f)
  {
	  super(f, 0, 64, 128);
    textureWidth = 64;
    textureHeight = 128;
    
      shoulders3 = new ModelRenderer(this, 30, 77);
      shoulders3.addBox(-3F, 2.5F, -3F, 6, 1, 6);
      shoulders3.setRotationPoint(0F, 0F, 0F);
      shoulders3.setTextureSize(64, 128);
      shoulders3.mirror = true;
      setRotation(shoulders3, 0F, 0F, 0F);
      body = new ModelRenderer(this, 31, 84);
      body.addBox(-4F, 0F, -2F, 8, 9, 4, f);
      body.setRotationPoint(0F, 0F, 0F);
      body.setTextureSize(64, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      shoulder21 = new ModelRenderer(this, 25, 69);
      shoulder21.addBox(-5F, -0.5F, -3F, 10, 2, 6);
      shoulder21.setRotationPoint(0F, 0F, 0F);
      shoulder21.setTextureSize(64, 128);
      shoulder21.mirror = true;
      setRotation(shoulder21, 0F, 0F, 0F);
      chest = new ModelRenderer(this, 35, 97);
      chest.addBox(-3.5F, 2F, -2.5F, 7, 7, 1);
      chest.setRotationPoint(0F, 0F, 0F);
      chest.setTextureSize(64, 128);
      chest.mirror = true;
      setRotation(chest, 0F, 0F, 0F);
      shoulders2 = new ModelRenderer(this, 27, 62);
      shoulders2.addBox(-4F, 1.5F, -3F, 8, 1, 6);
      shoulders2.setRotationPoint(0F, 0F, 0F);
      shoulders2.setTextureSize(64, 128);
      shoulders2.mirror = true;
      setRotation(shoulders2, 0F, 0F, 0F);
      tank2 = new ModelRenderer(this, 50, 108);
      tank2.addBox(-1.5F, -0.5F, 3.5F, 3, 1, 3);
      tank2.setRotationPoint(0F, 0F, 0F);
      tank2.setTextureSize(64, 128);
      tank2.mirror = true;
      setRotation(tank2, -0.1396263F, 0F, 0F);
      tank1 = new ModelRenderer(this, 50, 105);
      tank1.addBox(-1F, -1F, 4F, 2, 1, 2);
      tank1.setRotationPoint(0F, 0F, 0F);
      tank1.setTextureSize(64, 128);
      tank1.mirror = true;
      setRotation(tank1, -0.1396263F, 0F, 0F);
      tank3 = new ModelRenderer(this, 48, 112);
      tank3.addBox(-2F, 0F, 3F, 4, 9, 4);
      tank3.setRotationPoint(0F, 0F, 0F);
      tank3.setTextureSize(64, 128);
      tank3.mirror = true;
      setRotation(tank3, -0.1396263F, 0F, 0F);
      armR = new ModelRenderer(this, 40, 16);
      armR.mirror = true;
      armR.addBox(-3F, -2F, -2F, 4, 12, 4);
      armR.setRotationPoint(0F, 0F, 0F);
      armR.setTextureSize(64, 128);
      armR.mirror = true;
      setRotation(armR, 0F, 0F, 0F);
      armR.mirror = false;
      lowerarmR = new ModelRenderer(this, 40, 43);
      lowerarmR.mirror = true;
      lowerarmR.addBox(-3.5F, 3F, -2.5F, 4, 4, 5);
      lowerarmR.setRotationPoint(0F, 0F, 0F);
      lowerarmR.setTextureSize(64, 128);
      lowerarmR.mirror = true;
      setRotation(lowerarmR, 0F, 0F, 0F);
      lowerarmR.mirror = false;
      upperarmR = new ModelRenderer(this, 42, 33);
      upperarmR.mirror = true;
      upperarmR.addBox(-3.5F, -2.5F, -2.5F, 3, 5, 5);
      upperarmR.setRotationPoint(0F, 0F, 0F);
      upperarmR.setTextureSize(64, 128);
      upperarmR.mirror = true;
      setRotation(upperarmR, 0F, 0F, 0F);
      upperarmR.mirror = false;
      sholderR = new ModelRenderer(this, 37, 32);
      sholderR.mirror = true;
      sholderR.addBox(-4F, -3F, -1F, 3, 4, 2);
      sholderR.setRotationPoint(0F, 0F, 0F);
      sholderR.setTextureSize(64, 128);
      sholderR.mirror = true;
      setRotation(sholderR, 0F, 0F, 0F);
      sholderR.mirror = false;
      elbowR = new ModelRenderer(this, 54, 32);
      elbowR.mirror = true;
      elbowR.addBox(-4F, 2F, -1F, 1, 2, 2);
      elbowR.setRotationPoint(0F, 0F, 0F);
      elbowR.setTextureSize(64, 128);
      elbowR.mirror = true;
      setRotation(elbowR, 0F, 0F, 0F);
      elbowR.mirror = false;
      handR = new ModelRenderer(this, 40, 52);
      handR.mirror = true;
      handR.addBox(-3.4F, 7.2F, -2.5F, 2, 1, 5);
      handR.setRotationPoint(0F, 0F, 0F);
      handR.setTextureSize(64, 128);
      handR.mirror = true;
      setRotation(handR, 0F, 0F, 0F);
      handR.mirror = false;
      thumbR = new ModelRenderer(this, 50, 58);
      thumbR.mirror = true;
      thumbR.addBox(-1F, 8.5F, -2.5F, 1, 2, 2);
      thumbR.setRotationPoint(0F, 0F, 0F);
      thumbR.setTextureSize(64, 128);
      thumbR.mirror = true;
      setRotation(thumbR, 0F, 0F, 0F);
      thumbR.mirror = false;
      finger1R = new ModelRenderer(this, 44, 58);
      finger1R.mirror = true;
      finger1R.addBox(-3.2F, 8.5F, -2.5F, 2, 2, 1);
      finger1R.setRotationPoint(0F, 0F, 0F);
      finger1R.setTextureSize(64, 128);
      finger1R.mirror = true;
      setRotation(finger1R, 0F, 0F, 0F);
      finger1R.mirror = false;
      finger2R = new ModelRenderer(this, 44, 58);
      finger2R.mirror = true;
      finger2R.addBox(-3.2F, 8.5F, -1.3F, 2, 2, 1);
      finger2R.setRotationPoint(0F, 0F, 0F);
      finger2R.setTextureSize(64, 128);
      finger2R.mirror = true;
      setRotation(finger2R, 0F, 0F, 0F);
      finger2R.mirror = false;
      finger3R = new ModelRenderer(this, 44, 58);
      finger3R.mirror = true;
      finger3R.addBox(-3.2F, 8.5F, 0F, 2, 2, 1);
      finger3R.setRotationPoint(0F, 0F, 0F);
      finger3R.setTextureSize(64, 128);
      finger3R.mirror = true;
      setRotation(finger3R, 0F, 0F, 0F);
      finger3R.mirror = false;
      finger4R = new ModelRenderer(this, 44, 58);
      finger4R.mirror = true;
      finger4R.addBox(-3.2F, 8.5F, 1.3F, 2, 2, 1);
      finger4R.setRotationPoint(0F, 0F, 0F);
      finger4R.setTextureSize(64, 128);
      finger4R.mirror = true;
      setRotation(finger4R, 0F, 0F, 0F);
      finger4R.mirror = false;
      armL = new ModelRenderer(this, 40, 16);
      armL.addBox(-1F, -2F, -2F, 4, 12, 4);
      armL.setRotationPoint(0F, 0F, 0F);
      armL.setTextureSize(64, 128);
      armL.mirror = true;
      setRotation(armL, 0F, 0F, 0F);
      lowerarmL = new ModelRenderer(this, 40, 43);
      lowerarmL.addBox(-0.5F, 3F, -2.5F, 4, 4, 5);
      lowerarmL.setRotationPoint(0F, 0F, 0F);
      lowerarmL.setTextureSize(64, 128);
      lowerarmL.mirror = true;
      setRotation(lowerarmL, 0F, 0F, 0F);
      upperarmL = new ModelRenderer(this, 42, 33);
      upperarmL.addBox(0.5F, -2.5F, -2.5F, 3, 5, 5);
      upperarmL.setRotationPoint(0F, 0F, 0F);
      upperarmL.setTextureSize(64, 128);
      upperarmL.mirror = true;
      setRotation(upperarmL, 0F, 0F, 0F);
      sholderL = new ModelRenderer(this, 37, 32);
      sholderL.addBox(1F, -3F, -1F, 3, 4, 2);
      sholderL.setRotationPoint(0F, 0F, 0F);
      sholderL.setTextureSize(64, 128);
      sholderL.mirror = true;
      setRotation(sholderL, 0F, 0F, 0F);
      elbowL = new ModelRenderer(this, 54, 32);
      elbowL.addBox(3F, 2F, -1F, 1, 2, 2);
      elbowL.setRotationPoint(0F, 0F, 0F);
      elbowL.setTextureSize(64, 128);
      elbowL.mirror = true;
      setRotation(elbowL, 0F, 0F, 0F);
      finger4L = new ModelRenderer(this, 44, 58);
      finger4L.addBox(1.2F, 8.5F, 1.3F, 2, 2, 1);
      finger4L.setRotationPoint(0F, 0F, 0F);
      finger4L.setTextureSize(64, 128);
      finger4L.mirror = true;
      setRotation(finger4L, 0F, 0F, 0F);
      handL = new ModelRenderer(this, 40, 52);
      handL.addBox(1.4F, 7.2F, -2.5F, 2, 1, 5);
      handL.setRotationPoint(0F, 0F, 0F);
      handL.setTextureSize(64, 128);
      handL.mirror = true;
      setRotation(handL, 0F, 0F, 0F);
      finger1L = new ModelRenderer(this, 44, 58);
      finger1L.addBox(1.2F, 8.5F, -2.5F, 2, 2, 1);
      finger1L.setRotationPoint(0F, 0F, 0F);
      finger1L.setTextureSize(64, 128);
      finger1L.mirror = true;
      setRotation(finger1L, 0F, 0F, 0F);
      thumbL = new ModelRenderer(this, 50, 58);
      thumbL.addBox(0F, 8.5F, -2.5F, 1, 2, 2);
      thumbL.setRotationPoint(0F, 0F, 0F);
      thumbL.setTextureSize(64, 128);
      thumbL.mirror = true;
      setRotation(thumbL, 0F, 0F, 0F);
      finger2L = new ModelRenderer(this, 44, 58);
      finger2L.addBox(1.2F, 8.5F, -1.3F, 2, 2, 1);
      finger2L.setRotationPoint(0F, 0F, 0F);
      finger2L.setTextureSize(64, 128);
      finger2L.mirror = true;
      setRotation(finger2L, 0F, 0F, 0F);
      finger3L = new ModelRenderer(this, 44, 58);
      finger3L.addBox(1.2F, 8.5F, 0F, 2, 2, 1);
      finger3L.setRotationPoint(0F, 0F, 0F);
      finger3L.setTextureSize(64, 128);
      finger3L.mirror = true;
      setRotation(finger3L, 0F, 0F, 0F);
      
      this.bipedBody.addChild(shoulders3);
      this.bipedBody.addChild(body);
      this.bipedBody.addChild(shoulder21);
      this.bipedBody.addChild(chest);
      this.bipedBody.addChild(shoulders2);
      this.bipedBody.addChild(tank2);
      this.bipedBody.addChild(tank1);
      this.bipedBody.addChild(tank3);
      this.bipedRightArm.addChild(armR);
      this.bipedRightArm.addChild(lowerarmR);
      this.bipedRightArm.addChild(upperarmR);
      this.bipedRightArm.addChild(sholderR);
      this.bipedRightArm.addChild(elbowR);
      this.bipedRightArm.addChild(handR);
      this.bipedRightArm.addChild( thumbR);
      this.bipedRightArm.addChild(finger1R);
      this.bipedRightArm.addChild(finger2R);
      this.bipedRightArm.addChild(finger3R);
      this.bipedRightArm.addChild(finger4R);
      this.bipedLeftArm.addChild(armL);
      this.bipedLeftArm.addChild(lowerarmL);
      this.bipedLeftArm.addChild(upperarmL);
      this.bipedLeftArm.addChild(sholderL);
      this.bipedLeftArm.addChild(elbowL);
      this.bipedLeftArm.addChild(finger4L);
      this.bipedLeftArm.addChild(handL);
      this.bipedLeftArm.addChild(finger1L);
      this.bipedLeftArm.addChild(thumbL);
      this.bipedLeftArm.addChild(finger2L);
      this.bipedLeftArm.addChild(finger3L);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
   
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
