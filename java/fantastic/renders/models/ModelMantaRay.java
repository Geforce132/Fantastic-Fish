// Date: 7/22/2014 4:08:30 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package fantastic.renders.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import net.minecraft.util.Vec3;
import fantastic.entities.EntityMantaRay;

public class ModelMantaRay extends ModelBase
{
  //fields
    ModelRenderer mainbody;
    ModelRenderer wing_5R;
    ModelRenderer wing1R;
    ModelRenderer wing2R;
    ModelRenderer tail5;
    ModelRenderer tail1;
    ModelRenderer tail2;
    ModelRenderer tail4;
    ModelRenderer tail3;
    ModelRenderer fin;
    ModelRenderer eye3R;
    ModelRenderer eyeR;
    ModelRenderer eye2R;
    ModelRenderer mouth;
    ModelRenderer eyeL;
    ModelRenderer eye2L;
    ModelRenderer eye3L;
    ModelRenderer wing3R;
    ModelRenderer wing4R;
    ModelRenderer wing1L;
    ModelRenderer wing2L;
    ModelRenderer wing3L;
    ModelRenderer wing4l;
    ModelRenderer wing_5L;
  
  public ModelMantaRay()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      mainbody = new ModelRenderer(this, 0, 26);
      mainbody.addBox(-8F, -2F, -5F, 16, 5, 20);
      mainbody.setRotationPoint(0F, 0F, 0F);
      mainbody.setTextureSize(128, 128);
      mainbody.mirror = true;
      setRotation(mainbody, 0F, 0F, 0F);
      wing_5R = new ModelRenderer(this, 85, 58);
      wing_5R.addBox(-6F, -0.5F, 0F, 2, 1, 4);
      wing_5R.setRotationPoint(0F, 0F, 0F);
      wing_5R.setTextureSize(128, 128);
      wing_5R.mirror = true;
      setRotation(wing_5R, 0F, 0F, 0F);
      wing1R = new ModelRenderer(this, 61, 0);
      wing1R.addBox(-10F, -1F, -4F, 11, 3, 22);
      wing1R.setRotationPoint(-8F, 0F, 0F);
      wing1R.setTextureSize(128, 128);
      wing1R.mirror = true;
      setRotation(wing1R, 0F, 0.1745329F, 0F);
      wing2R = new ModelRenderer(this, 61, 25);
      wing2R.addBox(-5F, -1.5F, -2F, 8, 2, 18);
      wing2R.setRotationPoint(-12F, 1F, 0F);
      wing2R.setTextureSize(128, 128);
      wing2R.mirror = true;
      setRotation(wing2R, 0F, 0F, 0F);
      tail5 = new ModelRenderer(this, 0, 86);
      tail5.addBox(-0.5F, -0.5F, 0F, 1, 1, 25);
      tail5.setRotationPoint(0F, 0F, 4F);
      tail5.setTextureSize(128, 128);
      tail5.mirror = true;
      setRotation(tail5, 0F, 0F, 0F);
      tail1 = new ModelRenderer(this, 0, 52);
      tail1.addBox(-9F, -2.5F, 0F, 18, 4, 6);
      tail1.setRotationPoint(0F, 1F, 14F);
      tail1.setTextureSize(128, 128);
      tail1.mirror = true;
      setRotation(tail1, 0F, 0F, 0F);
      tail2 = new ModelRenderer(this, 0, 63);
      tail2.addBox(-5F, -1.5F, 0F, 10, 3, 4);
      tail2.setRotationPoint(0F, -0.5F, 6F);
      tail2.setTextureSize(128, 128);
      tail2.mirror = true;
      setRotation(tail2, 0F, 0F, 0F);
      tail4 = new ModelRenderer(this, 0, 90);
      tail4.addBox(-1.5F, -0.5F, 0F, 3, 1, 4);
      tail4.setRotationPoint(0F, 0F, 4F);
      tail4.setTextureSize(128, 128);
      tail4.mirror = true;
      setRotation(tail4, 0F, 0F, 0F);
      tail3 = new ModelRenderer(this, 0, 72);
      tail3.addBox(-3F, -1F, 0F, 6, 2, 4);
      tail3.setRotationPoint(0F, 0F, 4F);
      tail3.setTextureSize(128, 128);
      tail3.mirror = true;
      setRotation(tail3, 0F, 0F, 0F);
      fin = new ModelRenderer(this, 0, 81);
      fin.addBox(-0.5F, -4.5F, -1F, 1, 4, 3);
      fin.setRotationPoint(0F, 0F, 0F);
      fin.setTextureSize(128, 128);
      fin.mirror = true;
      setRotation(fin, -0.9773844F, 0F, 0F);
      eye3R = new ModelRenderer(this, 0, 40);
      eye3R.addBox(-2.5F, 5F, -10F, 4, 1, 3);
      eye3R.setRotationPoint(0F, 0F, 0F);
      eye3R.setTextureSize(128, 128);
      eye3R.mirror = true;
      setRotation(eye3R, 0F, 0F, 0.5235988F);
      eyeR = new ModelRenderer(this, 0, 25);
      eyeR.addBox(-8F, -2.5F, -6F, 3, 4, 4);
      eyeR.setRotationPoint(0F, 0F, 0F);
      eyeR.setTextureSize(128, 128);
      eyeR.mirror = true;
      setRotation(eyeR, 0.4014257F, -0.2617994F, 0F);
      eye2R = new ModelRenderer(this, 0, 33);
      eye2R.addBox(-8.5F, -2.5F, -7F, 2, 3, 3);
      eye2R.setRotationPoint(0F, 0F, 0F);
      eye2R.setTextureSize(128, 128);
      eye2R.mirror = true;
      setRotation(eye2R, 0.6283185F, -0.418879F, 0F);
      mouth = new ModelRenderer(this, 0, 0);
      mouth.addBox(-5F, -3F, -5.5F, 10, 7, 17);
      mouth.setRotationPoint(0F, 0F, 0F);
      mouth.setTextureSize(128, 128);
      mouth.mirror = true;
      setRotation(mouth, 0F, 0F, 0F);
      eyeL = new ModelRenderer(this, 0, 25);
      eyeL.mirror = true;
      eyeL.addBox(5F, -2.5F, -6F, 3, 4, 4);
      eyeL.setRotationPoint(0F, 0F, 0F);
      eyeL.setTextureSize(128, 128);
      eyeL.mirror = true;
      setRotation(eyeL, 0.4014257F, 0.2617994F, 0F);
      eyeL.mirror = false;
      eye2L = new ModelRenderer(this, 0, 33);
      eye2L.mirror = true;
      eye2L.addBox(6.5F, -2.5F, -7F, 2, 3, 3);
      eye2L.setRotationPoint(0F, 0F, 0F);
      eye2L.setTextureSize(128, 128);
      eye2L.mirror = true;
      setRotation(eye2L, 0.6283185F, 0.418879F, 0F);
      eye2L.mirror = false;
      eye3L = new ModelRenderer(this, 0, 40);
      eye3L.mirror = true;
      eye3L.addBox(-1.5F, 5F, -10F, 4, 1, 3);
      eye3L.setRotationPoint(0F, 0F, 0F);
      eye3L.setTextureSize(128, 128);
      eye3L.mirror = true;
      setRotation(eye3L, 0F, 0F, -0.5235988F);
      eye3L.mirror = false;
      wing3R = new ModelRenderer(this, 61, 45);
      wing3R.addBox(-5F, -0.5F, -5F, 6, 1, 12);
      wing3R.setRotationPoint(-4F, -0.5F, 7.333333F);
      wing3R.setTextureSize(128, 128);
      wing3R.mirror = true;
      setRotation(wing3R, 0F, 0F, 0F);
      wing4R = new ModelRenderer(this, 61, 58);
      wing4R.addBox(-4F, -0.5F, -2F, 4, 1, 8);
      wing4R.setRotationPoint(-5F, 0F, 0F);
      wing4R.setTextureSize(128, 128);
      wing4R.mirror = true;
      setRotation(wing4R, 0F, 0F, 0F);
      wing1L = new ModelRenderer(this, 61, 0);
      wing1L.mirror = true;
      wing1L.addBox(-1F, -1F, -4F, 11, 3, 22);
      wing1L.setRotationPoint(8F, 0F, 0F);
      wing1L.setTextureSize(128, 128);
      wing1L.mirror = true;
      setRotation(wing1L, 0F, -0.1745329F, 0F);
      wing1L.mirror = false;
      wing2L = new ModelRenderer(this, 61, 25);
      wing2L.mirror = true;
      wing2L.addBox(-3F, -1.5F, -2F, 8, 2, 18);
      wing2L.setRotationPoint(12F, 1F, 0F);
      wing2L.setTextureSize(128, 128);
      wing2L.mirror = true;
      setRotation(wing2L, 0F, 0F, 0F);
      wing2L.mirror = false;
      wing3L = new ModelRenderer(this, 61, 45);
      wing3L.mirror = true;
      wing3L.addBox(-1F, -0.5F, -5F, 6, 1, 12);
      wing3L.setRotationPoint(4F, -0.5F, 7.333333F);
      wing3L.setTextureSize(128, 128);
      wing3L.mirror = true;
      setRotation(wing3L, 0F, 0F, 0F);
      wing3L.mirror = false;
      wing4l = new ModelRenderer(this, 61, 58);
      wing4l.mirror = true;
      wing4l.addBox(0F, -0.5F, -2F, 4, 1, 8);
      wing4l.setRotationPoint(5F, 0F, 0F);
      wing4l.setTextureSize(128, 128);
      wing4l.mirror = true;
      setRotation(wing4l, 0F, 0F, 0F);
      wing4l.mirror = false;
      wing_5L = new ModelRenderer(this, 85, 58);
      wing_5L.mirror = true;
      wing_5L.addBox(4F, -0.5F, 0F, 2, 1, 4);
      wing_5L.setRotationPoint(0F, 0F, 0F);
      wing_5L.setTextureSize(128, 128);
      wing_5L.mirror = true;
      setRotation(wing_5L, 0F, 0F, 0F);
      wing_5L.mirror = false;
      
      mainbody.addChild(wing1L);
      wing1L.addChild(wing2L);
      wing2L.addChild(wing3L);
      wing3L.addChild(wing4l);
      wing4l.addChild(wing_5L);
      
      mainbody.addChild(wing1R);
      wing1R.addChild(wing2R);
      wing2R.addChild(wing3R);
      wing3R.addChild(wing4R);
      wing4R.addChild(wing_5R);
      
      mainbody.addChild(tail1);
      tail1.addChild(tail2);
      tail2.addChild(tail3);
      tail3.addChild(tail4);
      tail3.addChild(fin);
      tail4.addChild(tail5);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    mainbody.render(f5);
    //wing_5R.render(f5);
    //wing1R.render(f5);
    //wing2R.render(f5);
//    tail5.render(f5);
//    tail1.render(f5);
//    tail2.render(f5);
//    tail4.render(f5);
//    tail3.render(f5);
    //fin.render(f5);
    eye3R.render(f5);
    eyeR.render(f5);
    eye2R.render(f5);
    mouth.render(f5);
    eyeL.render(f5);
    eye2L.render(f5);
    eye3L.render(f5);
    //wing3R.render(f5);
    //wing4R.render(f5);
//    wing1L.render(f5);
//    wing2L.render(f5);
//    wing3L.render(f5);
//    wing4l.render(f5);
//    wing_5L.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    EntityMantaRay _fish = (EntityMantaRay)entity;
    
    	this.wing1L.rotateAngleZ = 0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) - 0.1F;
    	this.wing2L.rotateAngleZ = 0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) - 0.1F;
    	this.wing3L.rotateAngleZ = 0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) - 0.1F;
    	this.wing4l.rotateAngleZ = 0.2F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) - 0.1F;
    	this.wing_5L.rotateAngleZ = 0.05F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) - 0.1F;

    	this.wing1R.rotateAngleZ = -0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) + 0.1F;
    	this.wing2R.rotateAngleZ = -0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) + 0.1F;
    	this.wing3R.rotateAngleZ = -0.3F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) + 0.1F;
    	this.wing4R.rotateAngleZ = -0.2F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) + 0.1F;
    	this.wing_5R.rotateAngleZ = -0.05F*(MathHelper.cos(f2  * _fish.GetTailFlapSpeed() * 0.07F) ) + 0.1F;
    
    	this.tail1.rotateAngleX = -0.1F*(MathHelper.sin(f2  * _fish.GetTailFlapSpeed() * 0.07F) );
    	this.tail2.rotateAngleX = -0.1F*(MathHelper.sin(f2  * _fish.GetTailFlapSpeed() * 0.07F) );
    	this.tail3.rotateAngleX = -0.1F*(MathHelper.sin(f2  * _fish.GetTailFlapSpeed() * 0.07F) );

   
    
  }

} 
